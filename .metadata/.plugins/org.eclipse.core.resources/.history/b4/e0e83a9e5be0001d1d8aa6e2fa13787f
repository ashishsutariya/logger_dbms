package com.dbms.project1.v1.config;

import java.util.List;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Optional;
import java.util.function.Function;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.repository.query.FluentQuery.FetchableFluentQuery;

import com.dbms.project1.v1.dao.DbmsDaoInterface;
import com.dbms.project1.v1.model.Student;
import com.dbms.project1.v1.repository.StudentRepository;

import oracle.jdbc.pool.OracleDataSource;

import java.util.Date;

public class StudentRepositoryImpl implements StudentRepository {
   
	@Autowired
    DataSource dataSource;
	
	@Autowired
	DbmsDaoInterface dbdao;

	@Override
	public void flush() {
		// TODO Auto-generated method stub

	}

	@Override
	public <S extends Student> S saveAndFlush(S entity) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public <S extends Student> List<S> saveAllAndFlush(Iterable<S> entities) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void deleteAllInBatch(Iterable<Student> entities) {
		// TODO Auto-generated method stub

	}

	@Override
	public void deleteAllByIdInBatch(Iterable<Long> ids) {
		// TODO Auto-generated method stub

	}

	@Override
	public void deleteAllInBatch() {
		// TODO Auto-generated method stub

	}

	@Override
	public Student getOne(Long id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Student getById(Long id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Student getReferenceById(Long id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public <S extends Student> List<S> findAll(Example<S> example) {
		// TODO Auto-generated method stub

      List<Student> students = new ArrayList<>();
      students.add(new Student("John", "Doe", "john.doe@example.com"));
      students.add(new Student("Jane", "Doe", "jane.doe@example.com"));
      students.add(new Student("Bob", "Smith", "bob.smith@example.com"));
      students.add(new Student("Alice", "Jones", "alice.jones@example.com"));
      
      return (List<S>) students;
//		return null;
	}

	@Override
	public <S extends Student> List<S> findAll(Example<S> example, Sort sort) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public <S extends Student> List<S> saveAll(Iterable<S> entities) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Student> findAllById(Iterable<Long> ids) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public <S extends Student> S save(S entity) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Optional<Student> findById(Long id) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public boolean existsById(Long id) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public long count() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void deleteById(Long id) {
		// TODO Auto-generated method stub

	}

	@Override
	public void delete(Student entity) {
		// TODO Auto-generated method stub

	}

	@Override
	public void deleteAllById(Iterable<? extends Long> ids) {
		// TODO Auto-generated method stub

	}

	@Override
	public void deleteAll(Iterable<? extends Student> entities) {
		// TODO Auto-generated method stub

	}

	@Override
	public void deleteAll() {
		// TODO Auto-generated method stub

	}

	@Override
	public List<Student> findAll(Sort sort) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Page<Student> findAll(Pageable pageable) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public <S extends Student> Optional<S> findOne(Example<S> example) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public <S extends Student> Page<S> findAll(Example<S> example, Pageable pageable) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public <S extends Student> long count(Example<S> example) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public <S extends Student> boolean exists(Example<S> example) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public <S extends Student, R> R findBy(Example<S> example, Function<FetchableFluentQuery<S>, R> queryFunction) {
		// TODO Auto-generated method stub
		return null;
	}

//	@Override
//	public List<Student> findAll() {
//		// TODO Auto-generated method stub
////		return null;
//		 List<Student> students = new ArrayList<>();
//	      students.add(new Student("John", "Doe", "john.doe@example.com"));
//	      students.add(new Student("Jane", "Doe", "jane.doe@example.com"));
//	      students.add(new Student("Bob", "Smith", "bob.smith@example.com"));
//	      students.add(new Student("Alice", "Jones", "alice.jones@example.com"));
//	      
//	      return students;
//	}
//	@Override
//	public List<Student> findAll() {
//	    List<Student> students = new ArrayList<>();
//
//	    try (Connection connection = dataSource.getConnection()) {
//	        String sql = "SELECT * FROM Students";
//	        try (PreparedStatement statement = connection.prepareStatement(sql);
//	             ResultSet resultSet = statement.executeQuery()) {
//	            while (resultSet.next()) {
//	            	 String bNumber = resultSet.getString("B#");
//	            	    String firstName = resultSet.getString("first_name");
//	            	    String lastName = resultSet.getString("last_name");
//	            	    String level = resultSet.getString("st_level");
//	            	    Double gpa = resultSet.getDouble("gpa");
//	            	    String email = resultSet.getString("email");
//	            	    Date birthDate = resultSet.getDate("bdate");
//
//	            	    Student student = new Student(bNumber, firstName, lastName, level, gpa, email, birthDate);
//	            	    System.out.println(student.toString());
//	            	    students.add(student);
//	            }
//	        }
//	    } catch (SQLException e) {
//	        // handle exception
//	    	System.out.println("Sorry, Could not find students, please try after some time;");
//	    }
//	    return students;
//	}
	
//	@Override
//	public List<Student> findAll() {
//	    List<Student> students = new ArrayList<>();
//
//	    try (Connection connection = dataSource.getConnection()) {
//	        String sql = "SELECT * FROM students"; // Modify the query
//	        try (PreparedStatement statement = connection.prepareStatement(sql);
//	             ResultSet resultSet = statement.executeQuery()) {
//	            while (resultSet.next()) {
//	                String bNumber = resultSet.getString("B#");
//	                String firstName = resultSet.getString("first_name");
//	                String lastName = resultSet.getString("last_name");
//	                String level = resultSet.getString("st_level");
//	                Double gpa = resultSet.getDouble("gpa");
//	                String email = resultSet.getString("email");
//	                Date birthDate = resultSet.getDate("bdate");
//
//	                Student student = new Student(bNumber, firstName, lastName, level, gpa, email, birthDate);
//	                System.out.println(student.toString());
//	                students.add(student);
//	            }
//	        }
//	    } catch (SQLException e) {
//	        // handle exception
//	        System.out.println("Sorry, Could not find students, please try after some time;");
//	    }
//
//	    return students;
//	}
	
	@Override
	public List<Student> findAll() {
	   try {
		   

		return dbdao.findallstudents();
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return null;
	}

}
